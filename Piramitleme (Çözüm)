// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// author & developer : © dg_factor [06.07.2023, Istanbul]

// UYARI
// Geliştirme amaçlıdır, doğrudan alım-satım stratejisi yerine ikame edilemez. 

// AÇIKLAMALAR
// Aşağıdaki komut, aynı yönde ardışık sinyallerin filtrelenmesine örnek teşkil eder.
// Sistem sadece işlem yönü değiştiğinde sinyal üretir. 
// Kendi stratejinize entegre etmek için; 
// i) Tekrarlayan sinyalleri "long" ve "short" değişkenleriyle tanımlayınız.
// ii) "ÇÖZÜM" kısmındaki yapıyı kullanınız.

//@version=5
indicator("Piramitleme (Çözüm)", overlay=true)

// PROBLEM : Long ya da Short yönünde sinyalleri tekrarlanan (aynı yönde ardışık sinyal üreten) örnek bir stratejimiz olsun.
uzunluk = input.int(20)
ustband = ta.highest(uzunluk)
altband = ta.lowest(uzunluk)
long  = ta.crossover(close, altband)
short = ta.crossunder(close, ustband)
plot(ustband, "üstband", #2962ff50)
plot(altband, "altband", #ff980050)
plotshape(long, "tekrarlayan long", shape.triangleup, location.belowbar, #00bb0070, size=size.tiny)
plotshape(short, "tekrarlayan short", shape.triangledown, location.abovebar, #bb000070, size=size.tiny)

// ÇÖZÜM : Sinyallerin birbirine olan uzaklıklarından yararlanarak tekrarlamalarını önleyebiliriz. 
l = ta.barssince(long) < ta.barssince(short)
s = ta.barssince(long) > ta.barssince(short)
yeni_long  = l and (s[1] or not l[1])
yeni_short = s and (l[1] or not s[1])
plotshape(yeni_long, "tekrarlamayan long", shape.triangleup, location.top, #00ff00, size=size.tiny)
plotshape(yeni_short, "tekrarlamayan short", shape.triangledown, location.top, #ff0000, size=size.tiny)

// NOT 1) Karmaşık alım satım sinyalleri için farklı uygulamalar gerekebilir. 
// NOT 2) Yukarıdaki düzenleme, grafiğin başındaki ilk sinyali algılamaz. 
// İlk sinyali de sisteme dahil etmek istiyorsanız aşağıdaki boolean değişkenleri kullanabilirsiniz :
// ...
// ilk_long  = ta.cum(long  ? 1 : na) == 1
// ilk_short = ta.cum(short ? 1 : na) == 1
// yeni_long  = ilk_long  or l and (s[1] or not l[1])
// yeni_short = ilk_short or s and (l[1] or not s[1]) 
// ...

// Bitti
plotshape(barstate.isfirst, title="@ dg_factor", color=#13172200, editable=false)
